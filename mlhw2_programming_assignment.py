# -*- coding: utf-8 -*-
"""MLHW2 programming assignment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t3pVbAl-K4kWR0LU_2gwdi7wwS-U0Opq
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn import metrics
import numpy as np

import numpy as np
np.random.seed(42)

pip install scikit-learn

data = pd.read_csv("/content/spambase.csv")

from sklearn.naive_bayes import GaussianNB

import pandas as pd
column_names = ['word_freq_make', 'word_freq_address', 'word_freq_all', ..., 'capital_run_length_total', 'class']
data = pd.read_csv('spambase.csv', names=column_names)

features = data.drop('class', axis=1)
target = data['class']

features = data.drop('class', axis=1)
target = data['class']

from sklearn.model_selection import train_test_split

features_train, features_test, target_train, target_test = train_test_split(features, target,
test_size=0.4, random_state=42,shuffle=True)

features_train.columns = features_train.columns.astype(str)
features_test.columns = features_test.columns.astype(str)

naivebayes = GaussianNB()
naivebayes.fit(features_train, target_train)

target_pred = naivebayes.predict(features_test)

accuracy = metrics.accuracy_score(target_test, target_pred)
precision = metrics.precision_score(target_test, target_pred)
recall = metrics.recall_score(target_test, target_pred)
confusion_matrix = metrics.confusion_matrix(target_test, target_pred)
print ("Accuracy of Naive Bayes Classifier: {:.2f}%".format(accuracy * 100))
print("Precision of Naive Bayes Classifier: {:.2f}%".format(precision * 100))
print("Recall of Naive Bayes Classifier: {:.2f}%".format(recall * 100))
print("Confusion Matrix:")
print(confusion_matrix)